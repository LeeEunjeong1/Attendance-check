#include <stdio.h>

#include <pthread.h>

#include <semaphore.h>



int count=0;

int counter=0;



pthread_mutex_t mutex;

sem_t full,empty;



void *add1(void *data)

{



 int tmp;

 while(1)

 {

sem_wait(&full);

pthread_mutex_lock(&mutex);

  count++;

  printf("add1 count= %d\n",count);

sleep(1);

pthread_mutex_unlock(&mutex);

sem_post(&empty);

 }

}

void *add2(void *data)

{



 int tmp;

 while(1)

 {

sem_wait(&full);

pthread_mutex_lock(&mutex);

  count++;

  printf("add2 count= %d\n",count);

sleep(1);

pthread_mutex_unlock(&mutex);

sem_post(&empty);

 }

}



void *add3(void *data)

{



 int tmp;

 while(1)

 {

sem_wait(&full);

pthread_mutex_lock(&mutex);

  count++;

  printf("add3 count= %d\n",count);

sleep(1);

pthread_mutex_unlock(&mutex);

sem_post(&empty);

 }

}



void *sub1(void *data)

{

 

 int tmp;

 

 while(1)

 {

  sem_wait(&empty);

pthread_mutex_lock(&mutex);

  count--;

  printf("sub1 count= %d \n",count);

sleep(1);

pthread_mutex_unlock(&mutex);

sem_post(&full);

  

 }

}void *sub2(void *data)

{

 

 int tmp;

 

 while(1)

 {

  sem_wait(&empty);

pthread_mutex_lock(&mutex);

  count--;

  printf("sub2 count= %d \n",count);

sleep(1);

pthread_mutex_unlock(&mutex);

sem_post(&full);

  

 }

}

void *sub3(void *data)

{

 

 int tmp;

 

 while(1)

 {

  sem_wait(&empty);

pthread_mutex_lock(&mutex);

  count--;

  printf("sub3 count= %d \n",count);

sleep(1);



pthread_mutex_unlock(&mutex);

sem_post(&full);

  

 }

}

 





int main(){



 int i=0;

 

pthread_t pthread[5];

sem_init(&empty,0,0);

sem_init(&full,0,10);

pthread_mutex_init(&mutex,NULL);

  

 pthread_create(&pthread[0],NULL,add1,NULL);

 

 pthread_create(&pthread[1],NULL,sub1,NULL);



 pthread_create(&pthread[2],NULL,add2,NULL);

 

 pthread_create(&pthread[3],NULL,sub2,NULL);



 pthread_create(&pthread[4],NULL,add3,NULL);

 

 pthread_create(&pthread[5],NULL,sub3,NULL);

 

 for(i=0;i<6;i++)

  pthread_join(pthread[i],NULL);



 return 0;

}



출처: https://zetastring.tistory.com/125 [ZETA STRING]